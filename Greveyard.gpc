//|-------------------------------|
// Thu Apr 25 2019 12:02:29
// Script generated by GPC BLOCKLY
//|-------------------------------|

// UTILITIES
define FORWARD = -40;
define BACKWARD = 40;
define DIR_FORWARD = -1;
define DIR_BACKWARD = 1;
define DIR_LEFT = -1;
define DIR_RIGHT = 1;
define true = TRUE;
define false = FALSE;

// REMAPS
define BTN_START = PS3_CROSS;
define BTN_A = PS3_START;

// AUTO AIM 1
define BTN_AUTO_AIM_1 = PS3_L1;
define BTN_AUTO_AIM_TMP_1 = TRACE_1;
// OTHERS
int walkDirectionY, isAutoWalkingY, walkDirectionX, isAutoWalkingX;
int doStart;

int isHoldingY, isComboRelease;

remap PS3_CROSS -> XB1_PR1;
remap XB1_PR1 -> PS3_START;

remap PS3_START -> PS3_CROSS;

unmap PS3_SELECT;
unmap PS3_PS;
remap PS3_PS -> PS3_SELECT;

remap PS3_L1 -> PS3_L2;
remap PS3_L2 -> PS3_L1;

remap PS3_R2 -> PS3_R1
remap PS3_R1 -> PS3_R2;

unmap PS3_RY;
unmap PS3_RX;

init {

}

main {
	if(get_val(PS3_L1)) set_val(PS3_L1, 100);
	if(get_val(PS3_L2)) set_val(PS3_L2, 100);
	if(get_val(PS3_R1)) set_val(PS3_R1, 100);
	if(get_val(PS3_R2)) set_val(PS3_R2, 100);

	// Rapid Look Arround
	if(get_val(PS3_RY) > 0) {
		set_val(PS3_RY, 100)
	} else if(get_val(PS3_RY) < -40) {
		set_val(PS3_RY, -100)
	}
	if(get_val(PS3_RX) > 40) {
		set_val(PS3_RX, 100)
	} else if(get_val(PS3_RX) < -40) {
		set_val(PS3_RX, -100)
	}

	if(abs(get_val(PS3_RY)) > abs(get_val(PS3_LY))) { set_val(PS3_LY, get_val(PS3_RY)) }
	if(abs(get_val(PS3_RX)) > abs(get_val(PS3_LX))) { set_val(PS3_LX, get_val(PS3_RX)) }

	if(get_val(PS3_LY) > 40) {
		set_val(PS3_LY, 100)
	} else if(get_val(PS3_LY) < -40) {
		set_val(PS3_LY, -100)
	}
	if(get_val(PS3_LX) > 40) {
		set_val(PS3_LX, 100)
	} else if(get_val(PS3_LX) < -40) {
		set_val(PS3_LX, -100)
	}

	if (isHoldingY) {
		if (event_release(PS3_SELECT)) { 
			if (!isComboRelease) { isHoldingY = false }
			else { isComboRelease = false }
		} else {
			set_val(PS3_TRIANGLE, 100)
		}
	} else {
		if (isMultiPress(PS3_START, PS3_SELECT)) {
			isHoldingY = TRUE;
			isComboRelease = TRUE;
		} else {
			if (get_val(PS3_SELECT)) {
				set_val(PS3_TRIANGLE, 100);
			}
		}
	}

	// Auto Walk Y
	if(isAutoWalkingY) {
		if((walkDirectionY == DIR_FORWARD && isLeftAxisBackward(60)) 
			|| (walkDirectionY == DIR_BACKWARD && get_val(PS3_LY) < -60)) {
			isAutoWalkingY = FALSE;
		} else {
			set_val(XB1_LY, 100 * walkDirectionY);
		}
	} else {
		if (isMultiPressStickAnyDirection(PS3_START, PS3_LY, 30)) {
			isAutoWalkingY = TRUE;
			walkDirectionY = getDirection(PS3_LY)
		}
	}

	// Auto Walk X
	if(isAutoWalkingX) {
		if((walkDirectionX == DIR_FORWARD && isLeftAxisRight(60)) 
			|| (walkDirectionX == DIR_BACKWARD && get_val(PS3_LX) < -60)) {
			isAutoWalkingX = FALSE;
		} else {
			set_val(XB1_LX, 100 * walkDirectionX);
		}
	} else {
		if (isMultiPressStickAnyDirection(PS3_START, PS3_LX, 30)) {
			isAutoWalkingX = TRUE;
			walkDirectionX = getDirection(PS3_LX)
		}
	}

	// START HOTKEY + BUTTON
	if (event_release(BTN_START)) {
		if (doStart) {
			doStart = FALSE;
			onStartMenu();
			combo_run(OpenStartMenu);
		} else {
			set_val(PS3_CROSS, 100)
		}
	} else if (get_val(BTN_START) == 100 && get_ptime(BTN_START) > 600) {
		doStart = TRUE;
	}
}

function getDirection(stick) {
	if(get_val(stick) > 0) {
		return 1;
	} else if (get_val(stick) < 0) {
		return -1;
	}

	return 0;
}

function isLeftAxisForward(min_intensity) {
	return get_val(PS3_LY) < -min_intensity
}

function isLeftAxisBackward(min_intensity) {
	return get_val(PS3_LY) >= min_intensity
}

function isLeftAxisLeft(min_intensity) {
	return get_val(PS3_LX) < -min_intensity
}

function isLeftAxisRight(min_intensity) {
	return get_val(PS3_LX) >= min_intensity
}

function onStartMenuHotkeyComboPressed() {
	doStart = FALSE;
	doActivateRadar = FALSE;
}

function onStartMenu() {
	isAutoWalkingY = FALSE;
	isAutoWalkingX = FALSE;
}

function isRapidMultiPress(btA, btB) {
	if(event_press(btA) && get_ptime(btB) <= 100 ||
		event_press(btB) && get_ptime(btA) <= 100){
		return TRUE;
	}

	return FALSE;
}

function isMultiPress(btA, btB) {
	if((event_press(btB) && get_val(btA) > 0)
	 || (event_press(btA) && get_val(btB) > 0)) {
		return TRUE;
	}

	return FALSE;
}

function isMultiPressStickForward(bt, stick, sensitivity) {
	if(event_press(bt) && get_val(stick) < sensitivity) {
		return TRUE;
	}

	return FALSE;
}

function isMultiPressStickAnyDirection(bt, stick, sensitivity) {
	if(event_press(bt) && (abs(get_val(stick)) >= sensitivity)) {
		return TRUE;
	}
	return FALSE;
}

combo OpenStartMenu {
    set_val(XB1_PR1, 100);
    wait(200); 
    set_val(XB1_PR1, 0);
}

    //if((get_val(PS3_R1)) && (get_ptime(PS3_R1)) <= 1500) {
    //    set_val(PS3_CIRCLE, 100);
    //}
