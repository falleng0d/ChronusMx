// UTILITIES
define FORWARD = -40
define BACKWARD = 40
define DIR_FORWARD = -1
define DIR_BACKWARD = 1
define DIR_LEFT = -1
define DIR_RIGHT = 1
define true = TRUE
define false = FALSE
define MAX_RADIUS = 32767

// REMAPS
define BTN_START = XB1_A
define PRESS_SELECT = XB1_PR2
define PRESS_START = XB1_PR1
define PRESS_HOME = XB1_PL1
define GET_SELECT = XB1_VIEW
define GET_START = XB1_MENU
define GET_HOME = XB1_XBOX
define GET_LB = XB1_LB
define PRESS_LB = XB1_LB

// OTHERS
int walkDirectionY, isAutoWalkingY
int doStart, doSelect, doHome
int didStartAction

int isAutoRunning, isForaging

remap XB1_MENU -> XB1_PR1
remap XB1_PR1 -> XB1_MENU

// remap XB1_LB -> TRACE_1
///remap TRACE_1 -> XB1_LB

// PRESS HOME
unmap XB1_XBOX
// remap XB1_XBOX -> XB1_MENU
// remap XB1_PL1 -> XB1_MENU

// PRESS SELECT
remap XB1_VIEW -> XB1_PR2
remap XB1_PR2 -> XB1_VIEW

// remap XB1_B -> XB1_A
// remap XB1_A -> XB1_B

// PRESS SHARE
unmap XB1_SHARE

main {
	set_val(XB1_RX, useDeadzone(XB1_RX, 10))
	set_val(XB1_RY, useDeadzone(XB1_RY, 10))
	set_val(XB1_LX, useDeadzone(XB1_LX, 10))
	set_val(XB1_LY, useDeadzone(XB1_LY, 10))
	
    adt_off(XB1_LT)
    adt_off(XB1_RT)

	set_left_triggers_threshold(1)
    set_right_triggers_threshold(1, 1)
	
	if(get_val(XB1_SHARE)) set_val(XB1_RS, 100)

	// Rapid Look Arroud
	rapid_look_around_full_l(10)
	
	// Foraging
	if(isForaging) {
		combo_run(forage)
	}

	// Auto Run
	if (isAutoWalkingY) {
		if(event_press(GET_SELECT)){
			isAutoRunning = !isAutoRunning
		}
	}

	if(isAutoRunning && isAutoWalkingY) {
		set_val(XB1_B, 100)
	}

	// Auto Walk Y
	if(isAutoWalkingY) {
		if((walkDirectionY == DIR_FORWARD && isLeftAxisBackward(60))
			|| (walkDirectionY == DIR_BACKWARD && get_val(XB1_LY) < -60)) {
			isAutoWalkingY = FALSE
			isAutoRunning = FALSE
			isForaging = FALSE
		} else {
			set_val(XB1_LY, 100 * walkDirectionY)
		}
	} else {
		if (isMultiPressStickAnyDirection(GET_SELECT, XB1_LY, 30)) {
			isAutoWalkingY = TRUE
			doSelect = FALSE
			walkDirectionY = getDirection(XB1_LY)
		}
	}

	// START HOTKEY + BUTTON
	if (get_val(GET_START)) {
		set_val(XB1_A, 100)
	}
	
	// if (get_val(GET_START) == 100 && get_ptime(GET_START) > 200 && !didStartAction) {
	// 	combo_run(l3)
	// 	didStartAction = TRUE
	// } else if (event_release(GET_START)) {
	// 	if(didStartAction) {
	// 		didStartAction = FALSE
	// 	} else {
	// 		combo_run(a)
	// 	}
	// }

	// SELECT HOTKEY + BUTTON
	if (event_release(GET_SELECT)) {
		if (doSelect) {
			doSelect = FALSE
			onSelectMenu()
		} else if (isAutoWalkingY == FALSE) {
			set_val(PRESS_SELECT, 100)
		}
	} else if (get_val(GET_SELECT) == 100 && isAutoWalkingY == FALSE) {
		if (get_ptime(GET_SELECT) > 400) {
		 	// doSelect = TRUE
		 	set_val(PRESS_SELECT, 100)
		} else {
			set_val(PRESS_SELECT, 100)
		}
	}

	// HOME HOTKEY + BUTTON
	if (!isAutoWalkingY && get_val(GET_HOME)) {
		set_val(PRESS_START, 100)
	} else if (isAutoWalkingY && event_press(GET_HOME)) {
		isForaging = TRUE
	}
}

function is_analog_outside_circle(x, y, radius) {
	return (x * x + y * y) > radius * radius
}

function rapid_look_around_full_l(tolerance) {
	if (is_analog_outside_circle(get_val(XB1_LX), get_val(XB1_LY), tolerance)) {
		set_polar(POLAR_LS, 0 - get_polar(POLAR_LS, POLAR_ANGLE), MAX_RADIUS)
	}
}

function finger_trigger_left_analog(tolerance) {
    if(get_val(XB1_LY) > tolerance) {
        set_val(XB1_LY, 100)
    } else if(get_val(XB1_LY) < -tolerance) {
        set_val(XB1_LY, -100)
    }
    if(get_val(XB1_LX) > tolerance) {
        set_val(XB1_LX, 100)
    } else if(get_val(XB1_LX) < -tolerance) {
        set_val(XB1_LX, -100)
    }
}

function finger_trigger_right_analog(tolerance) {
	if(get_val(XB1_RY) > tolerance) {
		set_val(XB1_RY, 100)
	} else if(get_val(XB1_RY) < -tolerance) {
		set_val(XB1_RY, -100)
	}
	if(get_val(XB1_RX) > tolerance) {
		set_val(XB1_RX, 100)
	} else if(get_val(XB1_RX) < -tolerance) {
		set_val(XB1_RX, -100)
	}
}

function set_left_triggers_threshold(threshold) {
    if(get_val(XB1_LB) < threshold) set_val(XB1_LB, 0) else set_val(XB1_LB, 100)
	if(get_val(XB1_LT) < threshold) set_val(XB1_LT, 0) else set_val(XB1_LT, 100)
}

function set_right_triggers_threshold(threshold, threshold_small) {
    // if XB1_LT is pressed(aiming), the threshold is smaller
    if(get_val(XB1_LT) > threshold) {
        threshold = threshold_small
    }

	if(get_val(XB1_RB) < threshold) set_val(XB1_RB, 0) else set_val(XB1_RB, 100)
	if(get_val(XB1_RT) < threshold) set_val(XB1_RT, 0) else set_val(XB1_RT, 100)
}

function getDirection(stick) {
	if(get_val(stick) > 0) {
		return 1
	} else if (get_val(stick) < 0) {
		return -1
	}

	return 0
}

function isLeftAxisForward(min_intensity) {
	return get_val(XB1_LY) < -min_intensity
}

function isLeftAxisBackward(min_intensity) {
	return get_val(XB1_LY) >= min_intensity
}

function isLeftAxisLeft(min_intensity) {
	return get_val(XB1_LX) < -min_intensity
}

function isLeftAxisRight(min_intensity) {
	return get_val(XB1_LX) >= min_intensity
}

function onStartMenuHotkeyComboPressed() {
	doStart = FALSE
	doActivateRadar = FALSE
}

function onStartMenu() {
	isAutoWalkingY = FALSE
	isForaging = FALSE
}

function onSelectMenu() {
	isAutoWalkingY = FALSE
	isForaging = FALSE
}

function onHomeMenu() {
	isAutoWalkingY = FALSE
	isForaging = FALSE
}

function isRapidMultiPress(btA, btB) {
	if(event_press(btA) && get_ptime(btB) <= 100 ||
		event_press(btB) && get_ptime(btA) <= 100){
		return TRUE
	}

	return FALSE
}

function isMultiPress(btA, btB) {
	if((event_press(btB) && get_val(btA) > 0)
	 || (event_press(btA) && get_val(btB) > 0)) {
		return TRUE
	}

	return FALSE
}

function isMultiPressStickForward(bt, stick, sensitivity) {
	if(event_press(bt) && get_val(stick) < sensitivity) {
		return TRUE
	}

	return FALSE
}

function isMultiPressStickAnyDirection(bt, stick, sensitivity) {
	if(event_press(bt) && (abs(get_val(stick)) >= sensitivity)) {
		return TRUE
	}
	return FALSE
}

function useDeadzone(bt, deadzone) {
	if(abs(get_val(bt)) >= deadzone) {
		return get_val(bt)
	}

	return 0
}

combo r3 {
    set_val(XB1_RS, 100)
    wait(50)
    set_val(XB1_RS, 0)
}

combo l3 {
    set_val(XB1_LS, 100)
	wait(50)
	set_val(XB1_LS, 0)
}

combo a {
    set_val(XB1_A, 100)
    wait(50)
    set_val(XB1_A, 0)
}

combo forage {
	set_val(XB1_Y, 100)
	wait(50)
	set_val(XB1_Y, 0)
}

combo OpenStartMenu {
    set_val(PRESS_START, 100)
    wait(200);
    set_val(PRESS_START, 0)
}

combo OpenSelectMenu {
    set_val(PRESS_SELECT, 100)
    wait(200);
    set_val(PRESS_SELECT, 0)
}

combo OpenHomeMenu {
    set_val(PRESS_HOME, 100)
    wait(200);
    set_val(PRESS_HOME, 0)
}
