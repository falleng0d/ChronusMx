//|-------------------------------|
// Thu Apr 25 2019 12:02:29
// Script generated by GPC BLOCKLY
//|-------------------------------|

define FORWARD = -40;
define BACKWARD = 40;

define DIR_FORWARD = -1;
define DIR_BACKWARD = 1;

int doHoldX, doPS, doDisableAim, direction, doStart, walkDirection;
int taps, tapExpire, isAutoAimJustStarted, isContinueAutoAimAfterReleaseSnipeButton;
int isAutoWalking, isAutoAiming, isDoContinueAutoAim, snipeTime;
int isHoldX;

remap PS3_START -> XB1_PR2;
remap XB1_PR2 -> PS3_START;

remap PS3_PS -> XB1_PR1;
remap XB1_PR1 -> PS3_PS;

remap PS3_L1 -> PS3_L2;
remap PS3_L2 -> PS3_L1;

remap PS3_R2 -> PS3_R1;
remap PS3_R1 -> PS3_R2;

init {
	doHoldX = TRUE;
	doPS = TRUE;
	direction = -1;
	doDisableAim = TRUE;
	doStart = FALSE;
	isDoContinueAutoAim = FALSE;
	snipeTime = 0;
	isContinueAutoAimAfterReleaseSnipeButton = TRUE;
	isHoldX = FALSE;
}

main {
	if(get_val(PS3_L1)) set_val(PS3_L1, 100);
	if(get_val(PS3_L2)) set_val(PS3_L2, 100);
	if(get_val(PS3_R1)) set_val(PS3_R1, 100);
	if(get_val(PS3_R2)) set_val(PS3_R2, 100);

	// Auto Aim
	if(toggleAutoAimOnDoublePress(200)) {
		//swap(TRACE_1, PS3_L1);
		swap(PS3_L1, TRACE_1);
		set_val(PS3_L1, 100);
		if(!get_val(TRACE_1)) { // L1 released for the first time after aim started
			isAutoAimJustStarted = FALSE;
		}

		// Auto Snipe
		if(abs(get_val(PS3_LY)) < 20) { // if is not walking
			if(get_val(TRACE_1)){ // Snipe Button Pressed
				if(get_ptime(TRACE_1) < 300 && isAutoAimJustStarted == FALSE) { 
					isContinueAutoAimAfterReleaseSnipeButton = FALSE;
				} else { 
					if (isAutoAimJustStarted == FALSE) {
						combo_run(snipe);
					}
					isContinueAutoAimAfterReleaseSnipeButton = TRUE; 
				}
			} else {
				combo_stop(snipe);
				isDoContinueAutoAim = isContinueAutoAimAfterReleaseSnipeButton
			}
		}
	}

	// Auto Run
	if (isAutoWalking) {
		if(event_press(PS3_START)){
			combo_run(l3);
			isAutoAiming = FALSE;
			hotkeyPressed();
		}
	}

	// Auto Walk
	if(isAutoWalking) {
		if((walkDirection == DIR_FORWARD && isLeftAxisBackward(60)) 
			|| (walkDirection == DIR_BACKWARD && get_val(PS3_LY) < -60)) {
			isAutoWalking = FALSE;
		} else {
			set_val(XB1_LY, 100 * walkDirection);
		}
	} else {
		if (isMultiPressStickAnyDirection(PS3_START, PS3_LY, 30)) {
			isAutoWalking = TRUE;
			isAutoAiming = FALSE;
			walkDirection = getDirection(PS3_LY);
			hotkeyPressed();
		}
	}

	// Hold X
	if(event_press(PS3_CROSS)) {
		isHoldX = FALSE;
	} else if (isHoldX) {
		set_val(XB1_X, 100);
	}

	if (event_release(PS3_START)) {
		if(doStart) {
			combo_run(start)
			doStart = FALSE;
		}
		doStart = TRUE;
	}
}

function getDirection(stick) {
	if(get_val(stick) > 0) {
		return 1;
	} else if (get_val(stick) < 0) {
		return -1;
	}

	return 0;
}

function isLeftAxisForward(min_intensity) {
	return get_val(PS3_LY) < -min_intensity
}

function isLeftAxisBackward(min_intensity) {
	return get_val(PS3_LY) >= min_intensity
}

function hotkeyPressed() {
	doHoldX = FALSE;
	doStart = FALSE;
}

function toggleAutoAimOnDoublePress(doublePressSpeed) {
	if(tapExpire > 0) {
		tapExpire = tapExpire - get_rtime();
		if (tapExpire <= 0) {
			taps = 0;
		}
	}
	if(!isAutoAiming && event_press(PS3_L1)) {
		taps = taps + 1;
		tapExpire = doublePressSpeed;
	}
	if(!isAutoAiming && taps >= 2) {
		isAutoAiming = TRUE; //make isAutoRunning_00 true if false, false if true
		isAutoAimJustStarted = TRUE;
		isContinueAutoAimAfterReleaseSnipeButton = TRUE;
		isDoContinueAutoAim = TRUE;
		tapExpire = 0;
		taps = 0;
	} else {
		if (isAutoAiming && !isDoContinueAutoAim && event_release(TRACE_1)) {
			combo_stop(snipe);
			isAutoAiming = FALSE;
			taps = 0;
		}
	}

	return isAutoAiming;
}

function isRapidMultiPress(btA, btB) {
	if(event_press(btA) && get_ptime(btB) <= 100 ||
		event_press(btB) && get_ptime(btA) <= 100){
		return TRUE;
	}

	return FALSE;
}

function isMultiPress(btA, btB) {
	if((event_press(btB) && get_val(btA) > 0)
	 || (event_press(btA) && get_val(btB) > 0)) {
		return TRUE;
	}

	return FALSE;
}

function isMultiPressStickForward(bt, stick, sensitivity) {
	if(event_press(bt) && get_val(stick) < sensitivity) {
		return TRUE;
	}

	return FALSE;
}

function isMultiPressStickAnyDirection(bt, stick, sensitivity) {
	if(event_press(bt) && abs(get_val(stick)) >= sensitivity) {
		return TRUE;
	}

	return FALSE;
}

combo toggle_lights {
	set_val(PS3_R3, 100);
	wait(1000);
}

combo r3 {
    set_val(PS3_R3, 100); // Press X / Square to reload
    wait(200);  // Press X / Square for 200ms
}

combo xbox {
    set_val(XB1_PR1, 100);
    wait(200); 
}

combo start {
    set_val(XB1_PR2, 100);
    wait(200); 
    set_val(XB1_PR2, 0);
}

combo l3 {
    set_val(PS3_L3, 100);
    wait(200); 
}

combo snipe {
    set_val(PS3_L3, 100);
    wait(500);
}

combo RapidCircle {
    set_val(PS3_CIRCLE, 100);
    wait(40);
    set_val(PS3_CIRCLE, 0);
    wait(40);
    set_val(PS3_CIRCLE, 100);
    wait(40);
    set_val(PS3_CIRCLE, 0);
}

    //if((get_val(PS3_R1)) && (get_ptime(PS3_R1)) <= 1500) {
    //    set_val(PS3_CIRCLE, 100);
    //}
