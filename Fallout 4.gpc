//|-------------------------------|
// Thu Apr 25 2019 12:02:29
// Script generated by GPC BLOCKLY
//|-------------------------------|

int doPS, doStart, doDisableAim, direction;
int taps, tapExpire;
int isAutoWalking, isAutoAiming, isAutoSlowWalking;

unmap PS3_PS;
remap PS3_START -> TRACE_1;
remap TRACE_1 -> PS3_START;

init {
	doPS = TRUE;
	doStart = TRUE;
	direction = -1;
	doDisableAim = TRUE;
}

main {
	swap(PS3_R2, PS3_R1);
	swap(PS3_L2, PS3_L1);
	//swap(PS3_START, TRACE_1);
	if(get_val(PS3_L1)) set_val(PS3_L1, 100);
	if(get_val(PS3_L2)) set_val(PS3_L2, 100);
	if(get_val(PS3_R1)) set_val(PS3_R1, 100);
	if(get_val(PS3_R2)) set_val(PS3_R2, 100);

	if(get_val(PS3_L2) == 0 && isAutoAiming == FALSE) {
		if(get_val(PS3_RY) > 20) {
			set_val(PS3_RY, 100)
		} else if(get_val(PS3_RY) < -20) {
			set_val(PS3_RY, -100)
		}
		if(get_val(PS3_RX) > 20) {
			set_val(PS3_RX, 100)
		} else if(get_val(PS3_RX) < -20) {
			set_val(PS3_RX, -100)
		}
	}

	if(isAutoSlowWalking) {
		if(get_val(PS3_LY) <= -40) {
			direction = -1;
		} else if (get_val(PS3_LY) >= 40) {
			direction = 1;
		} else {
			set_val(XB1_LY, 50*direction);
		}
	}
	if (!isAutoSlowWalking && isMultiPressStickForward(PS3_START, PS3_LY, -20)) {
		isAutoSlowWalking = TRUE;
		doStart = FALSE;
	}
	if (event_release(PS3_START)) {
		if (!doStart && isAutoSlowWalking) {
			doStart = TRUE;
		} else if (doStart && isAutoSlowWalking) {
			isAutoSlowWalking = FALSE;
		} else if (doStart) {
			combo_run(start);
		}
	}

	// Toggle Lights
	if(isMultiPress(PS3_PS, PS3_CROSS)) {
		combo_run(toggle_lights);
		doPS = FALSE;
	}

	// Auto Aim
	if(toggleAutoAimOnDoublePress(200)) {
		set_val(PS3_L2, 100);
		if(abs(get_val(PS3_LY)) < 20) {
			combo_run(l3);
		}
	} else {
		if(event_release(PS3_L2)) {
			isAutoAiming = FALSE;
		}
	}

	// Auto Run
	if (isAutoWalking) {
		if(event_press(PS3_PS)){
			combo_run(l3);
			isAutoAiming = FALSE;
			isAutoSlowWalking = FALSE;
			doStart = TRUE;
			doPS = FALSE;
		}
	}

	// Auto Walk
	if(isAutoWalking) {
		if(get_val(PS3_LY) > 50) {
			isAutoWalking = FALSE;
		} else {
			set_val(XB1_LY, -100);
		}
	} else if (isMultiPressStickForward(PS3_PS, PS3_LY, -50)) {
		isAutoWalking = TRUE;
		isAutoSlowWalking = FALSE;
		isAutoAiming = FALSE;
		doPS = FALSE;
	}

	if (event_release(PS3_PS)) {
		if (doPS) {
			//combo_run(ps);
			combo_run(ps);
		} else {
			doPS = TRUE;
		}
	}
}

function toggleAutoAimOnDoublePress(doublePressSpeed) {
	if(tapExpire > 0) {
		tapExpire = tapExpire - get_rtime();
		if (tapExpire <= 0) {
			taps = 0;
		}
	}
	if(!isAutoAiming && event_press(PS3_L2)) {
		taps = taps + 1;
		tapExpire = doublePressSpeed;
	}
	if(!isAutoAiming && taps >= 2) {
		isAutoAiming = TRUE; //make isAutoRunning_00 true if false, false if true
		tapExpire = 0;
		taps = 0;
	} else {
		if (isAutoAiming && event_press(PS3_L2) ) {
			isAutoAiming = FALSE;
			taps = 0;
		}
	}

	return isAutoAiming;
}

function isRapidMultiPress(btA, btB) {
	if(event_press(btA) && get_ptime(btB) <= 100 ||
		event_press(btB) && get_ptime(btA) <= 100){
		return TRUE;
	}

	return FALSE;
}

function isMultiPress(btA, btB) {
	if((event_press(btB) && get_val(btA) > 0)
	 || (event_press(btA) && get_val(btB) > 0)) {
		return TRUE;
	}

	return FALSE;
}

function isMultiPressStickForward(bt, stick, sensitivity) {
	if(event_press(bt) && get_val(stick) < sensitivity) {
		return TRUE;
	}

	return FALSE;
}

combo toggle_lights {
	set_val(PS3_R3, 100);
	wait(1000);
}

combo ps {
    set_val(PS3_R3, 100); // Press X / Square to reload
    wait(200);  // Press X / Square for 200ms
}

combo start {
    set_val(TRACE_1, 100);
    wait(200); 
    set_val(TRACE_1, 0);
}

combo l3 {
    set_val(PS3_L3, 100);
    wait(200); 
}

combo RapidCircle {
    set_val(PS3_CIRCLE, 100);
    wait(40);
    set_val(PS3_CIRCLE, 0);
    wait(40);
    set_val(PS3_CIRCLE, 100);
    wait(40);
    set_val(PS3_CIRCLE, 0);
}

    //if((get_val(PS3_R1)) && (get_ptime(PS3_R1)) <= 1500) {
    //    set_val(PS3_CIRCLE, 100);
    //}
